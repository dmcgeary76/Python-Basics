'''
Given the percentage grade for the course, calculate and return the letter
grade that would appear in the Ryerson grades transcript, as defined on the
page Ryerson Grade Scales. The letter grade should be returned as a string
that consists of the uppercase letter followed by the possible modifier
"+" or "-". The function should work correctly for all values of pct
from 0 to 120.

I am going to try this exercise by webscraping the Ryerson data first to give
me some practice with BeautifulSoup again.
'''

# Do some imports for the Webscraping
from bs4 import BeautifulSoup as bs
import requests

# Retrieve the Ryerson page text and parse it
page = requests.get('https://www.ryerson.ca/registrar/faculty/grading/gradescales_ugrad/')
soup = bs(page.text, 'html.parser')

# Let's corral the data now
# Borrowed the method from here: https://www.youtube.com/watch?v=F1kZ39SvuGE&list=LL5pls3nT1zMLKQRnh1eu64g&index=5&t=0s
grade_info = soup.find('tbody')

data = []
for tr in grade_info.find_all('tr'):
    values = [td.text for td in tr.find_all('td')]
    data.append(values)

# The first element is the header - so returns an empty list and must be cleaved
data = data[1:]


# There is probably a better way to do this, but I am just setting up parallel lists to check against
grade_letters = []

for item in data:
    temp_list = []
    temp_list = [item[0], item[-1][:2]] # Just looking for the first two digits here
    grade_letters.append(temp_list)

# Make a few corrections here to make this list usable
grade_letters = grade_letters[:-2]
grade_letters[-1][1] = '0'
for i in range(len(grade_letters)):
    grade_letters[i][1] = float(grade_letters[i][1])
grade_letters.reverse()
    
print(grade_letters)

# Collect the grade to be evaluated and make sure that it is valid
def is_float(num):
    try:
        float(num)
        return True
    except ValueError:
        return False

# Get the input and make sure the input is in range
def get_num():
    valid = False
    while not valid:
        grade_input = input('Grade Value (0-120): ')
        if is_float(grade_input):
            my_num = float(grade_input)
            if (my_num >= 0) and (my_num <= 120):
                valid = True
    return my_num

# Valid input gets assigned to a global variable
num = get_num()        

# Do the grade evaluation
done = False
letter = ''
while not done:
    if num >= 90:
        letter = 'A+'
        done = True
    else:
        for j in range(len(grade_letters)):
            if num < grade_letters[j+1][1]:
                done = True
                letter = grade_letters[j][0]
                break

print('The grade of ' + str(num) + ' corresponds to a Ryerson letter grade of ' + letter + '.')
